# You need to set OpenAI credentials
# openai:
#   key: foo
#   org: bar

# huggingface:
#   token: baz

replicaCount: 1
avaConfig:
  fixGrammar: false
  profanityThreshold: tolerant # open, tolerant, strict
  completionType: openai_api # openai_api, local, huggingface_api
  tweetOnGenerate: false # whether to tweet after generating a response
googleCloud:
  serviceAccount: svc.prod.json
image:
  repository: gcr.io/langame-86ac4/ava
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


# Data is currently stored on the worker node
storage:
  # Useful if you want to avoid downloading models every times
  size: 20Gi
  # Huggingface stores its data here
  path: /home/docker/.cache/huggingface

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
