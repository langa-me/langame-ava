apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ava.fullname" . }}
  labels:
    {{- include "ava.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ava.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ava.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ava.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "--fix_grammar"
            - "{{ ternary "True" "False" (eq .Values.avaConfig.fixGrammar true)}}"
            - "--profanity_threshold"
            - "{{ .Values.avaConfig.profanityThreshold | default "tolerant" }}"
            - "--completion_type"
            - "{{ .Values.avaConfig.completionType | default "openai_api" }}"
            - "--tweet_on_generate"
            - "{{ ternary "True" "False" (eq .Values.avaConfig.tweetOnGenerate true)}}"
            - "--service_account_key_path"
            - "/etc/secrets/primary/svc.json"
            - "--use_gpu"
            - "{{ ternary "True" "False" (eq .Values.avaConfig.useGpu true)}}"
            - "--shard"
            - "{{ .Values.avaConfig.shard | default "0" }}"
          env:
            - name: PYTHONUNBUFFERED
              value: "0"
            - name: TRANSFORMERS_OFFLINE
              value: "1"
            - name: OPENAI_KEY
              value: "{{ required "You need to set an OpenAI key" .Values.openai.key }}"
            - name: OPENAI_ORG
              value: "{{ required "You need to set an OpenAI organization" .Values.openai.org }}"
            - name: HUGGINGFACE_TOKEN
              value: "{{ required "You need to set an Huggingface token" .Values.huggingface.token }}"
            - name: HUGGINGFACE_KEY
              value: "{{ required "You need to set an Huggingface key" .Values.huggingface.key }}"
          # Wait until embeddings and index built
          startupProbe:
            initialDelaySeconds: 60
            periodSeconds: 60
            # Embeddings + index might take up to 240 minutes depending on compute resources
            # (1000 embeddings on 16GB RAM 4 CPU => ~20 min)
            timeoutSeconds: 18000
            successThreshold: 1
            failureThreshold: 300
            exec:
              command:
              - cat
              - /home/docker/indexes/knn.index
          volumeMounts:
            - name: google-cloud-service-account
              mountPath: /etc/secrets/primary/svc.json
              subPath: svc.json
            # - name: data
              # mountPath: {{ .Values.storage.path }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: google-cloud-service-account
          secret:
            secretName: google-cloud-service-account
        - name: data
          hostPath:
            path: /tmp/ava
            type: DirectoryOrCreate
      dnsConfig:
        options:
          - name: ndots
            value: "1"
