name: Release

on:
  push:
    tags:
      - "*.*.*"

env:
  PROJECT_ID: langame-86ac4
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to OVHCloud Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ${{ secrets.OVHCLOUD_REGISTRY }}
          username: ${{ secrets.OVHCLOUD_REGISTRY_USERNAME }}
          password: ${{ secrets.OVHCLOUD_REGISTRY_PASSWORD }}
      - 
        name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      -
        name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel twine keyrings.google-artifactregistry-auth

      - 
        id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY_PROD }}"

      -
        name: Setup pip config
        run: |
          gcloud config set artifacts/repository langame
          gcloud config set artifacts/location us-central1

          gcloud config set account langame-ava@${{ env.PROJECT_ID }}.iam.gserviceaccount.com
          gcloud auth activate-service-account langame-ava@${{ env.PROJECT_ID }}.iam.gserviceaccount.com --key-file=${{ env.GOOGLE_APPLICATION_CREDENTIALS }} --project=${{ env.PROJECT_ID }}

          gcloud artifacts print-settings python > ./.pypirc
          gcloud artifacts print-settings python \
              --project ${{ env.PROJECT_ID }} \
              --repository langame \
              --location us-central1 \
              --json-key ${{ env.GOOGLE_APPLICATION_CREDENTIALS }} \
              | sed '11,$!d' | tee ./pip.conf
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          build-args: HUGGINGFACE_TOKEN=${{ secrets.HUGGINGFACE_TOKEN }}
          tags: |
            ${{ secrets.OVHCLOUD_REGISTRY }}/prod/ava:latest
            ${{ secrets.OVHCLOUD_REGISTRY }}/prod/ava:${{ env.VERSION }}
      - 
        name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_REPOSITORY: ${{ github.repository_owner }}/ava